{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 10, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/kamim/HackMTY-2025/components/compact-dashboard-header.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { Wallet } from \"lucide-react\"\r\n\r\nexport function CompactDashboardHeader() {\r\n  return (\r\n    <div className=\"flex items-center justify-between\">\r\n      <div>\r\n        <h1 className=\"text-lg font-bold text-foreground\">Financial Dashboard</h1>\r\n        <p className=\"text-xs text-muted-foreground\">Capital One Account Analysis</p>\r\n      </div>\r\n      <div className=\"flex items-center gap-1 rounded-lg bg-primary px-1.5 py-0.5\">\r\n        <Wallet className=\"h-2.5 w-2.5 text-primary-foreground\" />\r\n        <span className=\"text-xs font-medium text-primary-foreground\">Connected</span>\r\n      </div>\r\n    </div>\r\n  )\r\n}"],"names":[],"mappings":";;;;;AAEA;AAFA;;;AAIO,SAAS;IACd,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;;kCACC,8OAAC;wBAAG,WAAU;kCAAoC;;;;;;kCAClD,8OAAC;wBAAE,WAAU;kCAAgC;;;;;;;;;;;;0BAE/C,8OAAC;gBAAI,WAAU;;kCACb,8OAAC,gNAAM;wBAAC,WAAU;;;;;;kCAClB,8OAAC;wBAAK,WAAU;kCAA8C;;;;;;;;;;;;;;;;;;AAItE","debugId":null}},
    {"offset": {"line": 82, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/kamim/HackMTY-2025/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\r\nimport { twMerge } from \"tailwind-merge\"\r\n\r\nexport function cn(...inputs: ClassValue[]) {\r\n  return twMerge(clsx(inputs))\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,IAAA,sKAAO,EAAC,IAAA,6IAAI,EAAC;AACtB","debugId":null}},
    {"offset": {"line": 97, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/kamim/HackMTY-2025/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card\"\r\n      className={cn(\r\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-header\"\r\n      className={cn(\r\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-2 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-title\"\r\n      className={cn(\"leading-none font-semibold\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-description\"\r\n      className={cn(\"text-muted-foreground text-sm\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-action\"\r\n      className={cn(\r\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-content\"\r\n      className={cn(\"px-6\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\r\n  return (\r\n    <div\r\n      data-slot=\"card-footer\"\r\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport {\r\n  Card,\r\n  CardHeader,\r\n  CardFooter,\r\n  CardTitle,\r\n  CardAction,\r\n  CardDescription,\r\n  CardContent,\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,kHAAE,EACX,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,kHAAE,EACX,4JACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,kHAAE,EAAC,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,kHAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,kHAAE,EACX,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,kHAAE,EAAC,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,IAAA,kHAAE,EAAC,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 199, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/kamim/HackMTY-2025/lib/hooks.ts"],"sourcesContent":["import useSWR from 'swr'\r\nimport { Account, Transaction } from '@/types/financial'\r\n\r\nconst fetcher = (url: string) => fetch(url).then((res) => res.json())\r\n\r\nexport function useAccounts() {\r\n  const { data, error, isLoading } = useSWR('/api/v1/accounts', fetcher)\r\n  return {\r\n    accounts: (data?.accounts || []) as Account[],\r\n    isLoading,\r\n    error\r\n  }\r\n}\r\n\r\nexport function useTransactions(accountId?: string) {\r\n  const url = accountId ? `/api/transactions?accountId=${accountId}` : '/api/transactions'\r\n  const { data, error, isLoading } = useSWR(url, fetcher)\r\n  return {\r\n    transactions: (data?.transactions || []) as Transaction[],\r\n    isLoading,\r\n    error\r\n  }\r\n}\r\n\r\nexport function useCreditScore() {\r\n  const { data, error, isLoading } = useSWR('/api/credit-score', fetcher)\r\n  return {\r\n    creditScore: data?.creditScore || 742, // Default fallback\r\n    scoreRange: data?.scoreRange || 'Good',\r\n    isLoading,\r\n    error\r\n  }\r\n}"],"names":[],"mappings":";;;;;;;;AAAA;;AAGA,MAAM,UAAU,CAAC,MAAgB,MAAM,KAAK,IAAI,CAAC,CAAC,MAAQ,IAAI,IAAI;AAE3D,SAAS;IACd,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,GAAG,IAAA,yKAAM,EAAC,oBAAoB;IAC9D,OAAO;QACL,UAAW,MAAM,YAAY,EAAE;QAC/B;QACA;IACF;AACF;AAEO,SAAS,gBAAgB,SAAkB;IAChD,MAAM,MAAM,YAAY,CAAC,4BAA4B,EAAE,WAAW,GAAG;IACrE,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,GAAG,IAAA,yKAAM,EAAC,KAAK;IAC/C,OAAO;QACL,cAAe,MAAM,gBAAgB,EAAE;QACvC;QACA;IACF;AACF;AAEO,SAAS;IACd,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,GAAG,IAAA,yKAAM,EAAC,qBAAqB;IAC/D,OAAO;QACL,aAAa,MAAM,eAAe;QAClC,YAAY,MAAM,cAAc;QAChC;QACA;IACF;AACF","debugId":null}},
    {"offset": {"line": 240, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/kamim/HackMTY-2025/components/compact-earnings-section.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\r\nimport { Line, LineChart, ResponsiveContainer, Tooltip, XAxis, YAxis } from \"recharts\"\r\nimport { useTransactions, useAccounts } from \"@/lib/hooks\"\r\nimport { Transaction, Account } from \"@/types/financial\"\r\n\r\nexport function CompactEarningsSection() {\r\n  const { transactions, isLoading } = useTransactions()\r\n  const { accounts } = useAccounts()\r\n\r\n  // Calculate metrics\r\n  const netWorth = accounts.reduce((sum: number, acc: Account) => sum + acc.balance, 0)\r\n  const monthlyIncome = transactions\r\n    .filter((txn: Transaction) => txn.type === 'credit' && txn.category === 'Income')\r\n    .reduce((sum: number, txn: Transaction) => sum + txn.amount, 0)\r\n\r\n  // Process earnings data for chart\r\n  const earningsByMonth = transactions\r\n    .filter((txn: Transaction) => txn.type === 'credit' && txn.category === 'Income')\r\n    .reduce((acc: Record<string, number>, txn: Transaction) => {\r\n      const month = new Date(txn.date).toLocaleDateString('en-US', { month: 'short' })\r\n      acc[month] = (acc[month] || 0) + txn.amount\r\n      return acc\r\n    }, {})\r\n\r\n  const earningsData = Object.entries(earningsByMonth).map(([month, amount]) => ({\r\n    month,\r\n    amount\r\n  }))\r\n\r\n  // Income breakdown\r\n  const incomeBreakdown = transactions\r\n    .filter((txn: Transaction) => txn.type === 'credit' && txn.category === 'Income')\r\n    .reduce((acc: Record<string, number>, txn: Transaction) => {\r\n      const source = txn.subcategory\r\n      acc[source] = (acc[source] || 0) + txn.amount\r\n      return acc\r\n    }, {})\r\n\r\n  const incomeSources = Object.entries(incomeBreakdown).map(([source, amount]) => ({\r\n    source,\r\n    amount,\r\n    percentage: (amount / Object.values(incomeBreakdown).reduce((a, b) => a + b, 0)) * 100\r\n  }))\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <Card className=\"border-border bg-card h-full\">\r\n        <CardHeader className=\"pb-2 px-3 pt-3\">\r\n          <CardTitle className=\"text-sm font-semibold text-card-foreground\">Earnings</CardTitle>\r\n        </CardHeader>\r\n        <CardContent className=\"p-3\">\r\n          <div className=\"flex items-center justify-center h-24\">\r\n            <div className=\"animate-spin rounded-full h-6 w-6 border-b-2 border-primary\"></div>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Card className=\"border-border bg-card h-full\">\r\n      <CardHeader className=\"pb-1 px-3 pt-2\">\r\n        <CardTitle className=\"text-sm font-semibold text-card-foreground\">Earnings</CardTitle>\r\n      </CardHeader>\r\n      <CardContent className=\"space-y-2 px-3 pb-2\">\r\n        {/* Key Metrics */}\r\n        <div className=\"grid grid-cols-2 gap-3\">\r\n          <div className=\"rounded-lg bg-primary/5 p-3 border border-primary/10\">\r\n            <p className=\"text-xs font-medium text-muted-foreground mb-1\">Net Worth</p>\r\n            <p className=\"text-base font-bold text-primary\">${netWorth.toLocaleString()}</p>\r\n          </div>\r\n          <div className=\"rounded-lg bg-primary/5 p-3 border border-primary/10\">\r\n            <p className=\"text-xs font-medium text-muted-foreground mb-1\">Monthly Income</p>\r\n            <p className=\"text-base font-bold text-primary\">${monthlyIncome.toLocaleString()}</p>\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n          <p className=\"text-sm font-medium text-card-foreground mb-2\">6-Month Trend</p>\r\n          <ResponsiveContainer width=\"100%\" height={80}>\r\n            <LineChart data={earningsData}>\r\n              <XAxis dataKey=\"month\" stroke=\"#A0A0A0\" fontSize={10} tickLine={false} axisLine={false} />\r\n              <YAxis\r\n                stroke=\"#A0A0A0\"\r\n                fontSize={10}\r\n                tickLine={false}\r\n                axisLine={false}\r\n                tickFormatter={(value: number) => `$${value / 1000}k`}\r\n              />\r\n              <Tooltip\r\n                contentStyle={{\r\n                  backgroundColor: \"#2D2D2D\",\r\n                  border: \"1px solid #3D3D3D\",\r\n                  borderRadius: \"6px\",\r\n                  color: \"#FFFFFF\",\r\n                  fontSize: \"12px\",\r\n                }}\r\n                formatter={(value: number) => [`$${value.toLocaleString()}`, \"Income\"]}\r\n              />\r\n              <Line type=\"monotone\" dataKey=\"amount\" stroke=\"#156aa2\" strokeWidth={2} dot={{ fill: \"#156aa2\", r: 3 }} />\r\n            </LineChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n\r\n        <div className=\"space-y-2\">\r\n          <p className=\"text-sm font-medium text-card-foreground\">Income Sources</p>\r\n          {incomeSources.map((item) => (\r\n            <div key={item.source} className=\"space-y-1\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <span className=\"text-sm text-muted-foreground\">{item.source}</span>\r\n                <span className=\"text-sm font-semibold text-card-foreground\">${item.amount.toLocaleString()}</span>\r\n              </div>\r\n              <div className=\"h-2 w-full overflow-hidden rounded-full bg-secondary/50\">\r\n                <div className=\"h-full bg-primary rounded-full transition-all duration-300\" style={{ width: `${item.percentage}%` }} />\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n}"],"names":[],"mappings":";;;;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAJA;;;;;AAOO,SAAS;IACd,MAAM,EAAE,YAAY,EAAE,SAAS,EAAE,GAAG,IAAA,+HAAe;IACnD,MAAM,EAAE,QAAQ,EAAE,GAAG,IAAA,2HAAW;IAEhC,oBAAoB;IACpB,MAAM,WAAW,SAAS,MAAM,CAAC,CAAC,KAAa,MAAiB,MAAM,IAAI,OAAO,EAAE;IACnF,MAAM,gBAAgB,aACnB,MAAM,CAAC,CAAC,MAAqB,IAAI,IAAI,KAAK,YAAY,IAAI,QAAQ,KAAK,UACvE,MAAM,CAAC,CAAC,KAAa,MAAqB,MAAM,IAAI,MAAM,EAAE;IAE/D,kCAAkC;IAClC,MAAM,kBAAkB,aACrB,MAAM,CAAC,CAAC,MAAqB,IAAI,IAAI,KAAK,YAAY,IAAI,QAAQ,KAAK,UACvE,MAAM,CAAC,CAAC,KAA6B;QACpC,MAAM,QAAQ,IAAI,KAAK,IAAI,IAAI,EAAE,kBAAkB,CAAC,SAAS;YAAE,OAAO;QAAQ;QAC9E,GAAG,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,MAAM,IAAI,CAAC,IAAI,IAAI,MAAM;QAC3C,OAAO;IACT,GAAG,CAAC;IAEN,MAAM,eAAe,OAAO,OAAO,CAAC,iBAAiB,GAAG,CAAC,CAAC,CAAC,OAAO,OAAO,GAAK,CAAC;YAC7E;YACA;QACF,CAAC;IAED,mBAAmB;IACnB,MAAM,kBAAkB,aACrB,MAAM,CAAC,CAAC,MAAqB,IAAI,IAAI,KAAK,YAAY,IAAI,QAAQ,KAAK,UACvE,MAAM,CAAC,CAAC,KAA6B;QACpC,MAAM,SAAS,IAAI,WAAW;QAC9B,GAAG,CAAC,OAAO,GAAG,CAAC,GAAG,CAAC,OAAO,IAAI,CAAC,IAAI,IAAI,MAAM;QAC7C,OAAO;IACT,GAAG,CAAC;IAEN,MAAM,gBAAgB,OAAO,OAAO,CAAC,iBAAiB,GAAG,CAAC,CAAC,CAAC,QAAQ,OAAO,GAAK,CAAC;YAC/E;YACA;YACA,YAAY,AAAC,SAAS,OAAO,MAAM,CAAC,iBAAiB,MAAM,CAAC,CAAC,GAAG,IAAM,IAAI,GAAG,KAAM;QACrF,CAAC;IAED,IAAI,WAAW;QACb,qBACE,8OAAC,iIAAI;YAAC,WAAU;;8BACd,8OAAC,uIAAU;oBAAC,WAAU;8BACpB,cAAA,8OAAC,sIAAS;wBAAC,WAAU;kCAA6C;;;;;;;;;;;8BAEpE,8OAAC,wIAAW;oBAAC,WAAU;8BACrB,cAAA,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BAAI,WAAU;;;;;;;;;;;;;;;;;;;;;;IAKzB;IAEA,qBACE,8OAAC,iIAAI;QAAC,WAAU;;0BACd,8OAAC,uIAAU;gBAAC,WAAU;0BACpB,cAAA,8OAAC,sIAAS;oBAAC,WAAU;8BAA6C;;;;;;;;;;;0BAEpE,8OAAC,wIAAW;gBAAC,WAAU;;kCAErB,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAE,WAAU;kDAAiD;;;;;;kDAC9D,8OAAC;wCAAE,WAAU;;4CAAmC;4CAAE,SAAS,cAAc;;;;;;;;;;;;;0CAE3E,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAE,WAAU;kDAAiD;;;;;;kDAC9D,8OAAC;wCAAE,WAAU;;4CAAmC;4CAAE,cAAc,cAAc;;;;;;;;;;;;;;;;;;;kCAIlF,8OAAC;;0CACC,8OAAC;gCAAE,WAAU;0CAAgD;;;;;;0CAC7D,8OAAC,0LAAmB;gCAAC,OAAM;gCAAO,QAAQ;0CACxC,cAAA,8OAAC,kKAAS;oCAAC,MAAM;;sDACf,8OAAC,8JAAK;4CAAC,SAAQ;4CAAQ,QAAO;4CAAU,UAAU;4CAAI,UAAU;4CAAO,UAAU;;;;;;sDACjF,8OAAC,8JAAK;4CACJ,QAAO;4CACP,UAAU;4CACV,UAAU;4CACV,UAAU;4CACV,eAAe,CAAC,QAAkB,CAAC,CAAC,EAAE,QAAQ,KAAK,CAAC,CAAC;;;;;;sDAEvD,8OAAC,kKAAO;4CACN,cAAc;gDACZ,iBAAiB;gDACjB,QAAQ;gDACR,cAAc;gDACd,OAAO;gDACP,UAAU;4CACZ;4CACA,WAAW,CAAC,QAAkB;oDAAC,CAAC,CAAC,EAAE,MAAM,cAAc,IAAI;oDAAE;iDAAS;;;;;;sDAExE,8OAAC,4JAAI;4CAAC,MAAK;4CAAW,SAAQ;4CAAS,QAAO;4CAAU,aAAa;4CAAG,KAAK;gDAAE,MAAM;gDAAW,GAAG;4CAAE;;;;;;;;;;;;;;;;;;;;;;;kCAK3G,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAE,WAAU;0CAA2C;;;;;;4BACvD,cAAc,GAAG,CAAC,CAAC,qBAClB,8OAAC;oCAAsB,WAAU;;sDAC/B,8OAAC;4CAAI,WAAU;;8DACb,8OAAC;oDAAK,WAAU;8DAAiC,KAAK,MAAM;;;;;;8DAC5D,8OAAC;oDAAK,WAAU;;wDAA6C;wDAAE,KAAK,MAAM,CAAC,cAAc;;;;;;;;;;;;;sDAE3F,8OAAC;4CAAI,WAAU;sDACb,cAAA,8OAAC;gDAAI,WAAU;gDAA6D,OAAO;oDAAE,OAAO,GAAG,KAAK,UAAU,CAAC,CAAC,CAAC;gDAAC;;;;;;;;;;;;mCAN5G,KAAK,MAAM;;;;;;;;;;;;;;;;;;;;;;;AAcjC","debugId":null}},
    {"offset": {"line": 594, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/kamim/HackMTY-2025/components/compact-expenses-section.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\r\nimport { Bar, BarChart, ResponsiveContainer, Tooltip, XAxis, YAxis } from \"recharts\"\r\nimport { useTransactions } from \"@/lib/hooks\"\r\nimport { Transaction } from \"@/types/financial\"\r\n\r\nexport function CompactExpensesSection() {\r\n  const { transactions, isLoading } = useTransactions()\r\n\r\n  // Process expenses data\r\n  const expensesByCategory = transactions\r\n    .filter((txn: Transaction) => txn.type === 'debit')\r\n    .reduce((acc: Record<string, number>, txn: Transaction) => {\r\n      const category = txn.category\r\n      acc[category] = (acc[category] || 0) + Math.abs(txn.amount)\r\n      return acc\r\n    }, {})\r\n\r\n  const expensesData = Object.entries(expensesByCategory).map(([category, amount]) => ({\r\n    category,\r\n    amount\r\n  }))\r\n\r\n  const totalExpenses = expensesData.reduce((sum, item) => sum + item.amount, 0)\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <Card className=\"border-border bg-card h-full\">\r\n        <CardHeader className=\"pb-2 px-3 pt-3\">\r\n          <CardTitle className=\"text-sm font-semibold text-card-foreground\">Expenses</CardTitle>\r\n        </CardHeader>\r\n        <CardContent className=\"p-3\">\r\n          <div className=\"flex items-center justify-center h-24\">\r\n            <div className=\"animate-spin rounded-full h-6 w-6 border-b-2 border-primary\"></div>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Card className=\"border-border bg-card h-full\">\r\n      <CardHeader className=\"pb-1 px-3 pt-2\">\r\n        <CardTitle className=\"text-sm font-semibold text-card-foreground\">Expenses</CardTitle>\r\n      </CardHeader>\r\n      <CardContent className=\"space-y-2 px-3 pb-2\">\r\n        {/* Key Metrics */}\r\n        <div className=\"rounded-lg bg-accent/5 p-3 border border-accent/10\">\r\n          <p className=\"text-xs font-medium text-muted-foreground mb-1\">Monthly Expenses</p>\r\n          <p className=\"text-base font-bold text-accent\">${totalExpenses.toLocaleString()}</p>\r\n        </div>\r\n\r\n        <div>\r\n          <p className=\"text-sm font-medium text-card-foreground mb-2\">Monthly Breakdown</p>\r\n          <ResponsiveContainer width=\"100%\" height={80}>\r\n            <BarChart data={expensesData}>\r\n              <XAxis dataKey=\"category\" stroke=\"#A0A0A0\" fontSize={10} tickLine={false} axisLine={false} />\r\n              <YAxis\r\n                stroke=\"#A0A0A0\"\r\n                fontSize={10}\r\n                tickLine={false}\r\n                axisLine={false}\r\n                tickFormatter={(value: number) => `$${value}`}\r\n              />\r\n              <Tooltip\r\n                contentStyle={{\r\n                  backgroundColor: \"#2D2D2D\",\r\n                  border: \"1px solid #3D3D3D\",\r\n                  borderRadius: \"6px\",\r\n                  color: \"#FFFFFF\",\r\n                  fontSize: \"12px\",\r\n                }}\r\n                formatter={(value: number) => [`$${value.toLocaleString()}`, \"Spent\"]}\r\n              />\r\n              <Bar dataKey=\"amount\" fill=\"#CB2426\" radius={[3, 3, 0, 0]} />\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n\r\n        <div className=\"space-y-2\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <p className=\"text-sm font-medium text-card-foreground\">Category Details</p>\r\n            <p className=\"text-sm font-semibold text-card-foreground\">Total: ${totalExpenses.toLocaleString()}</p>\r\n          </div>\r\n          {expensesData.map((item) => {\r\n            const percentage = (item.amount / totalExpenses) * 100\r\n            return (\r\n              <div key={item.category} className=\"flex items-center justify-between\">\r\n                <div className=\"flex items-center gap-2\">\r\n                  <div className=\"h-2 w-2 rounded-full bg-accent\" />\r\n                  <span className=\"text-sm text-muted-foreground\">{item.category}</span>\r\n                </div>\r\n                <div className=\"flex items-center gap-2\">\r\n                  <span className=\"text-xs text-muted-foreground\">{percentage.toFixed(0)}%</span>\r\n                  <span className=\"text-sm font-semibold text-card-foreground\">${item.amount.toLocaleString()}</span>\r\n                </div>\r\n              </div>\r\n            )\r\n          })}\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 928, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/kamim/HackMTY-2025/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nexport interface ButtonProps\r\n  extends React.ButtonHTMLAttributes<HTMLButtonElement> {\r\n  variant?: 'default' | 'outline' | 'ghost'\r\n  size?: 'default' | 'sm' | 'lg'\r\n}\r\n\r\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\r\n  ({ className, variant = 'default', size = 'default', ...props }, ref) => {\r\n    return (\r\n      <button\r\n        className={cn(\r\n          \"inline-flex items-center justify-center rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:opacity-50 disabled:pointer-events-none ring-offset-background\",\r\n          {\r\n            \"bg-primary text-primary-foreground hover:bg-primary/90\": variant === 'default',\r\n            \"border border-input hover:bg-accent hover:text-accent-foreground\": variant === 'outline',\r\n            \"hover:bg-accent hover:text-accent-foreground\": variant === 'ghost',\r\n          },\r\n          {\r\n            \"h-10 py-2 px-4\": size === 'default',\r\n            \"h-9 px-3 rounded-md\": size === 'sm',\r\n            \"h-11 px-8 rounded-md\": size === 'lg',\r\n          },\r\n          className\r\n        )}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    )\r\n  }\r\n)\r\nButton.displayName = \"Button\"\r\n\r\nexport { Button }"],"names":[],"mappings":";;;;;AAAA;AACA;;;;AAQA,MAAM,uBAAS,mNAAgB,CAC7B,CAAC,EAAE,SAAS,EAAE,UAAU,SAAS,EAAE,OAAO,SAAS,EAAE,GAAG,OAAO,EAAE;IAC/D,qBACE,8OAAC;QACC,WAAW,IAAA,kHAAE,EACX,wQACA;YACE,0DAA0D,YAAY;YACtE,oEAAoE,YAAY;YAChF,gDAAgD,YAAY;QAC9D,GACA;YACE,kBAAkB,SAAS;YAC3B,uBAAuB,SAAS;YAChC,wBAAwB,SAAS;QACnC,GACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 963, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/kamim/HackMTY-2025/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Input = React.forwardRef<HTMLInputElement, React.InputHTMLAttributes<HTMLInputElement>>(\r\n  ({ className, type, ...props }, ref) => {\r\n    return (\r\n      <input\r\n        type={type}\r\n        className={cn(\r\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\r\n          className\r\n        )}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    )\r\n  }\r\n)\r\nInput.displayName = \"Input\"\r\n\r\nexport { Input }"],"names":[],"mappings":";;;;;AAAA;AACA;;;;AAEA,MAAM,sBAAQ,mNAAgB,CAC5B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,8OAAC;QACC,MAAM;QACN,WAAW,IAAA,kHAAE,EACX,gWACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 991, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/kamim/HackMTY-2025/components/compact-ai-chat-assistant.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { useState } from \"react\"\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Input } from \"@/components/ui/input\"\r\nimport { MessageCircle, Send } from \"lucide-react\"\r\nimport { useAccounts, useTransactions } from \"@/lib/hooks\"\r\n\r\nexport function CompactAIChatAssistant() {\r\n  const [input, setInput] = useState(\"\")\r\n  const [response, setResponse] = useState(\"\")\r\n  const [isLoading, setIsLoading] = useState(false)\r\n\r\n  const { accounts } = useAccounts()\r\n  const { transactions } = useTransactions()\r\n\r\n  const handleSendMessage = async () => {\r\n    if (!input.trim() || isLoading) return\r\n\r\n    setIsLoading(true)\r\n    setResponse(\"\")\r\n\r\n    try {\r\n      const res = await fetch('/api/insights', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          question: input,\r\n          accounts,\r\n          transactions\r\n        }),\r\n      })\r\n\r\n      const data = await res.json()\r\n      setResponse(data.answer || data.error || \"Sorry, I couldn't process your request.\")\r\n    } catch {\r\n      setResponse(\"Sorry, I'm having trouble connecting. Please try again.\")\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  const handleKeyPress = (e: React.KeyboardEvent) => {\r\n    if (e.key === 'Enter' && !e.shiftKey) {\r\n      e.preventDefault()\r\n      handleSendMessage()\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Card className=\"border-border bg-card\">\r\n      <CardHeader className=\"pb-2 px-3 pt-2\">\r\n        <CardTitle className=\"flex items-center gap-2 text-sm font-semibold text-card-foreground\">\r\n          <MessageCircle className=\"h-4 w-4\" />\r\n          AI Assistant\r\n        </CardTitle>\r\n      </CardHeader>\r\n\r\n      <CardContent className=\"p-3 pt-0 space-y-3\">\r\n        <div className=\"flex gap-2\">\r\n          <Input\r\n            value={input}\r\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => setInput(e.target.value)}\r\n            onKeyPress={handleKeyPress}\r\n            placeholder=\"Ask about your finances...\"\r\n            className=\"flex-1 h-8 text-sm\"\r\n            disabled={isLoading}\r\n          />\r\n          <Button\r\n            onClick={handleSendMessage}\r\n            disabled={!input.trim() || isLoading}\r\n            size=\"sm\"\r\n            className=\"h-8 px-3\"\r\n          >\r\n            <Send className=\"h-3 w-3\" />\r\n          </Button>\r\n        </div>\r\n\r\n        {response && (\r\n          <div className=\"text-sm text-muted-foreground bg-secondary/30 rounded-lg p-2 max-h-20 overflow-y-auto\">\r\n            {response}\r\n          </div>\r\n        )}\r\n\r\n        {isLoading && (\r\n          <div className=\"text-sm text-muted-foreground bg-secondary/30 rounded-lg p-2\">\r\n            Thinking...\r\n          </div>\r\n        )}\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n}"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAPA;;;;;;;;AASO,SAAS;IACd,MAAM,CAAC,OAAO,SAAS,GAAG,IAAA,iNAAQ,EAAC;IACnC,MAAM,CAAC,UAAU,YAAY,GAAG,IAAA,iNAAQ,EAAC;IACzC,MAAM,CAAC,WAAW,aAAa,GAAG,IAAA,iNAAQ,EAAC;IAE3C,MAAM,EAAE,QAAQ,EAAE,GAAG,IAAA,2HAAW;IAChC,MAAM,EAAE,YAAY,EAAE,GAAG,IAAA,+HAAe;IAExC,MAAM,oBAAoB;QACxB,IAAI,CAAC,MAAM,IAAI,MAAM,WAAW;QAEhC,aAAa;QACb,YAAY;QAEZ,IAAI;YACF,MAAM,MAAM,MAAM,MAAM,iBAAiB;gBACvC,QAAQ;gBACR,SAAS;oBACP,gBAAgB;gBAClB;gBACA,MAAM,KAAK,SAAS,CAAC;oBACnB,UAAU;oBACV;oBACA;gBACF;YACF;YAEA,MAAM,OAAO,MAAM,IAAI,IAAI;YAC3B,YAAY,KAAK,MAAM,IAAI,KAAK,KAAK,IAAI;QAC3C,EAAE,OAAM;YACN,YAAY;QACd,SAAU;YACR,aAAa;QACf;IACF;IAEA,MAAM,iBAAiB,CAAC;QACtB,IAAI,EAAE,GAAG,KAAK,WAAW,CAAC,EAAE,QAAQ,EAAE;YACpC,EAAE,cAAc;YAChB;QACF;IACF;IAEA,qBACE,8OAAC,iIAAI;QAAC,WAAU;;0BACd,8OAAC,uIAAU;gBAAC,WAAU;0BACpB,cAAA,8OAAC,sIAAS;oBAAC,WAAU;;sCACnB,8OAAC,yOAAa;4BAAC,WAAU;;;;;;wBAAY;;;;;;;;;;;;0BAKzC,8OAAC,wIAAW;gBAAC,WAAU;;kCACrB,8OAAC;wBAAI,WAAU;;0CACb,8OAAC,mIAAK;gCACJ,OAAO;gCACP,UAAU,CAAC,IAA2C,SAAS,EAAE,MAAM,CAAC,KAAK;gCAC7E,YAAY;gCACZ,aAAY;gCACZ,WAAU;gCACV,UAAU;;;;;;0CAEZ,8OAAC,qIAAM;gCACL,SAAS;gCACT,UAAU,CAAC,MAAM,IAAI,MAAM;gCAC3B,MAAK;gCACL,WAAU;0CAEV,cAAA,8OAAC,0MAAI;oCAAC,WAAU;;;;;;;;;;;;;;;;;oBAInB,0BACC,8OAAC;wBAAI,WAAU;kCACZ;;;;;;oBAIJ,2BACC,8OAAC;wBAAI,WAAU;kCAA+D;;;;;;;;;;;;;;;;;;AAOxF","debugId":null}},
    {"offset": {"line": 1148, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/kamim/HackMTY-2025/components/compact-debt-section.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\r\nimport { CreditCard, TrendingDown, AlertCircle } from \"lucide-react\"\r\nimport { useAccounts } from \"@/lib/hooks\"\r\nimport { Account } from \"@/types/financial\"\r\n\r\nexport function CompactDebtSection() {\r\n  const { accounts, isLoading: accountsLoading } = useAccounts()\r\n\r\n  const debtAccounts = accounts.filter((acc: Account) => acc.type === 'credit' || acc.type === 'loan')\r\n  const totalDebt = debtAccounts.reduce((sum: number, account: Account) => sum + Math.abs(account.balance), 0)\r\n  const primaryLoan = debtAccounts.find((acc: Account) => acc.type === 'loan') || debtAccounts[0]\r\n\r\n  const isLoading = accountsLoading\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <Card className=\"border-border bg-card\">\r\n        <CardHeader className=\"pb-2\">\r\n          <CardTitle className=\"text-sm text-card-foreground\">Loans, Credit & Debt</CardTitle>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <p className=\"text-xs\">Loading...</p>\r\n        </CardContent>\r\n      </Card>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Card className=\"border-border bg-card p-3\">\r\n      <CardHeader className=\"pb-1 px-0 pt-0\">\r\n        <div className=\"flex items-center justify-between\">\r\n          <CardTitle className=\"text-xs text-card-foreground\">Loans, Credit & Debt</CardTitle>\r\n          <div className=\"flex items-center gap-1 rounded-lg bg-accent/10 px-1.5 py-0.5\">\r\n            <AlertCircle className=\"h-2.5 w-2.5 text-accent\" />\r\n            <span className=\"text-xs font-medium text-accent\">${totalDebt.toLocaleString()} Total</span>\r\n          </div>\r\n        </div>\r\n      </CardHeader>\r\n      <CardContent className=\"space-y-2 px-0 pb-0\">\r\n        {primaryLoan && (\r\n          <div className=\"space-y-2 rounded-lg border border-border bg-secondary p-3\">\r\n            <div className=\"flex items-start justify-between\">\r\n              <div className=\"flex items-center gap-2\">\r\n                <div className=\"rounded-full bg-accent/10 p-1\">\r\n                  {primaryLoan.type === \"credit\" ? (\r\n                    <CreditCard className=\"h-4 w-4 text-accent\" />\r\n                  ) : (\r\n                    <TrendingDown className=\"h-4 w-4 text-accent\" />\r\n                  )}\r\n                </div>\r\n                <div>\r\n                  <p className=\"text-sm font-medium text-card-foreground\">{primaryLoan.name}</p>\r\n                  <p className=\"text-xs text-muted-foreground\">{primaryLoan.type === 'credit' ? 'Credit Card' : 'Loan'}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"space-y-2\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <span className=\"text-sm text-muted-foreground\">Balance</span>\r\n                <span className=\"text-sm font-bold text-accent\">${Math.abs(primaryLoan.balance).toLocaleString()}</span>\r\n              </div>\r\n\r\n              {primaryLoan.type === \"credit\" && primaryLoan.creditLimit && (\r\n                <>\r\n                  <div className=\"space-y-1\">\r\n                    <div className=\"flex items-center justify-between text-xs\">\r\n                      <span className=\"text-muted-foreground\">Credit Utilization</span>\r\n                      <span className=\"text-muted-foreground\">{((Math.abs(primaryLoan.balance) / primaryLoan.creditLimit) * 100).toFixed(0)}%</span>\r\n                    </div>\r\n                    <div className=\"h-2 w-full overflow-hidden rounded-full bg-background\">\r\n                      <div className=\"h-full bg-accent\" style={{ width: `${(Math.abs(primaryLoan.balance) / primaryLoan.creditLimit) * 100}%` }} />\r\n                    </div>\r\n                    <div className=\"flex items-center justify-between text-xs\">\r\n                      <span className=\"text-muted-foreground\">${Math.abs(primaryLoan.balance).toLocaleString()} used</span>\r\n                      <span className=\"text-muted-foreground\">${primaryLoan.creditLimit.toLocaleString()} limit</span>\r\n                    </div>\r\n                  </div>\r\n                </>\r\n              )}\r\n\r\n              <div className=\"grid grid-cols-2 gap-2 pt-2 border-t border-border\">\r\n                <div className=\"flex items-center justify-between\">\r\n                  <span className=\"text-xs text-muted-foreground\">APR</span>\r\n                  <span className=\"text-xs font-medium text-card-foreground\">{primaryLoan.apr}%</span>\r\n                </div>\r\n                {primaryLoan.monthlyPayment && (\r\n                  <div className=\"flex items-center justify-between\">\r\n                    <span className=\"text-xs text-muted-foreground\">\r\n                      {primaryLoan.type === \"credit\" ? \"Min Payment\" : \"Monthly\"}\r\n                    </span>\r\n                    <span className=\"text-xs font-medium text-card-foreground\">\r\n                      ${primaryLoan.monthlyPayment.toLocaleString()}\r\n                    </span>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"rounded-lg border border-primary/20 bg-primary/5 p-2\">\r\n          <div className=\"flex items-start gap-1.5\">\r\n            <div className=\"rounded-full bg-primary/10 p-0.5\">\r\n              <TrendingDown className=\"h-3 w-3 text-primary\" />\r\n            </div>\r\n            <div className=\"flex-1\">\r\n              <p className=\"text-xs font-medium text-card-foreground\">Debt Payoff Strategy</p>\r\n              <p className=\"mt-0.5 text-xs text-muted-foreground\">\r\n                Focus on paying off your Capital One card first (highest APR at 18.99%). Consider increasing monthly\r\n                payment to $200 to save $450 in interest.\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1599, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/kamim/HackMTY-2025/components/compact-credit-score-section.tsx"],"sourcesContent":["'use client'\r\n\r\nimport { useState, useEffect } from 'react'\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'\r\nimport { TrendingUp, TrendingDown, CreditCard, AlertCircle, CheckCircle, Target } from 'lucide-react'\r\nimport { useAccounts } from '@/lib/hooks'\r\nimport { Account } from '@/types/financial'\r\n\r\ninterface CreditScoreData {\r\n  creditScore: number\r\n  scoreRange: string\r\n  lastUpdated: string\r\n}\r\n\r\nexport function CompactCreditScoreSection() {\r\n  const [creditScore, setCreditScore] = useState<CreditScoreData | null>(null)\r\n  const [loading, setLoading] = useState(true)\r\n  const { accounts } = useAccounts()\r\n\r\n  useEffect(() => {\r\n    const fetchCreditScore = async () => {\r\n      try {\r\n        const response = await fetch('/api/credit-score')\r\n        const data = await response.json()\r\n        setCreditScore(data)\r\n      } catch (error) {\r\n        console.error('Failed to fetch credit score:', error)\r\n      } finally {\r\n        setLoading(false)\r\n      }\r\n    }\r\n\r\n    fetchCreditScore()\r\n  }, [])\r\n\r\n  // Calculate credit utilization\r\n  const creditCards = accounts.filter((acc: Account) => acc.type === 'credit')\r\n  const totalCreditLimit = creditCards.reduce((sum, acc) => sum + (acc.creditLimit || 0), 0)\r\n  const totalCreditUsed = creditCards.reduce((sum, acc) => sum + Math.abs(acc.balance), 0)\r\n  const creditUtilization = totalCreditLimit > 0 ? (totalCreditUsed / totalCreditLimit) * 100 : 0\r\n\r\n  // Mock score change (in real app, this would come from API)\r\n  const scoreChange = Math.floor(Math.random() * 40) - 20 // -20 to +20\r\n  const scoreChangeText = scoreChange > 0 ? `+${scoreChange}` : scoreChange.toString()\r\n\r\n  const getScoreColor = (score: number) => {\r\n    if (score >= 800) return 'text-green-600'\r\n    if (score >= 740) return 'text-blue-600'\r\n    if (score >= 670) return 'text-yellow-600'\r\n    if (score >= 580) return 'text-orange-600'\r\n    return 'text-red-600'\r\n  }\r\n\r\n  const getScoreProgress = (score: number) => {\r\n    const min = 300\r\n    const max = 850\r\n    return ((score - min) / (max - min)) * 100\r\n  }\r\n\r\n  const getUtilizationColor = (utilization: number) => {\r\n    if (utilization <= 10) return 'text-green-600'\r\n    if (utilization <= 30) return 'text-blue-600'\r\n    if (utilization <= 50) return 'text-yellow-600'\r\n    return 'text-red-600'\r\n  }\r\n\r\n  const getUtilizationAdvice = (utilization: number) => {\r\n    if (utilization <= 10) return 'Excellent utilization'\r\n    if (utilization <= 30) return 'Good utilization'\r\n    if (utilization <= 50) return 'Moderate utilization'\r\n    return 'High utilization - consider paying down'\r\n  }\r\n\r\n  if (loading) {\r\n    return (\r\n      <Card className=\"border-border bg-card h-[200px]\">\r\n        <CardHeader className=\"pb-2\">\r\n          <CardTitle className=\"flex items-center gap-1.5 text-sm text-card-foreground\">\r\n            <CreditCard className=\"h-4 w-4\" />\r\n            Credit Score\r\n          </CardTitle>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <div className=\"flex items-center justify-center h-24\">\r\n            <div className=\"animate-spin rounded-full h-6 w-6 border-b-2 border-primary\"></div>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    )\r\n  }\r\n\r\n  if (!creditScore) {\r\n    return (\r\n      <Card className=\"border-border bg-card h-[200px]\">\r\n        <CardHeader className=\"pb-2\">\r\n          <CardTitle className=\"flex items-center gap-1.5 text-sm text-card-foreground\">\r\n            <CreditCard className=\"h-4 w-4\" />\r\n            Credit Score\r\n          </CardTitle>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <div className=\"flex items-center justify-center h-24 text-muted-foreground text-sm\">\r\n            Unable to load credit score\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Card className=\"border-border bg-card\">\r\n      <CardHeader className=\"pb-2\">\r\n        <CardTitle className=\"flex items-center gap-1.5 text-sm text-card-foreground\">\r\n          <CreditCard className=\"h-4 w-4\" />\r\n          Credit Score\r\n        </CardTitle>\r\n      </CardHeader>\r\n      <CardContent className=\"space-y-3\">\r\n        {/* Main Score Display */}\r\n        <div className=\"text-center space-y-1\">\r\n          <div className={`text-3xl font-bold ${getScoreColor(creditScore.creditScore)}`}>\r\n            {creditScore.creditScore}\r\n          </div>\r\n          <div className=\"flex items-center justify-center gap-2\">\r\n            <div className={`text-sm font-medium ${getScoreColor(creditScore.creditScore)}`}>\r\n              {creditScore.scoreRange}\r\n            </div>\r\n            <div className={`flex items-center gap-1 text-xs ${scoreChange >= 0 ? 'text-green-600' : 'text-red-600'}`}>\r\n              {scoreChange >= 0 ? (\r\n                <TrendingUp className=\"h-3 w-3\" />\r\n              ) : (\r\n                <TrendingDown className=\"h-3 w-3\" />\r\n              )}\r\n              <span>{scoreChangeText} this month</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Progress Bar */}\r\n        <div className=\"space-y-2\">\r\n          <div className=\"flex justify-between text-xs text-muted-foreground\">\r\n            <span>300</span>\r\n            <span>850</span>\r\n          </div>\r\n          <div className=\"w-full bg-secondary rounded-full h-2\">\r\n            <div\r\n              className=\"bg-primary h-2 rounded-full transition-all duration-500\"\r\n              style={{ width: `${getScoreProgress(creditScore.creditScore)}%` }}\r\n            />\r\n          </div>\r\n          <div className=\"grid grid-cols-5 text-xs text-center text-muted-foreground\">\r\n            <div>Poor</div>\r\n            <div>Fair</div>\r\n            <div>Good</div>\r\n            <div>Very Good</div>\r\n            <div>Excellent</div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Credit Utilization */}\r\n        <div className=\"space-y-2\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <span className=\"text-xs font-medium text-card-foreground\">Credit Utilization</span>\r\n            <span className={`text-xs font-medium ${getUtilizationColor(creditUtilization)}`}>\r\n              {creditUtilization.toFixed(1)}%\r\n            </span>\r\n          </div>\r\n          <div className=\"w-full bg-secondary rounded-full h-1.5\">\r\n            <div\r\n              className={`h-1.5 rounded-full transition-all duration-500 ${\r\n                creditUtilization <= 10 ? 'bg-green-500' :\r\n                creditUtilization <= 30 ? 'bg-blue-500' :\r\n                creditUtilization <= 50 ? 'bg-yellow-500' : 'bg-red-500'\r\n              }`}\r\n              style={{ width: `${Math.min(creditUtilization, 100)}%` }}\r\n            />\r\n          </div>\r\n          <div className=\"text-xs text-muted-foreground\">\r\n            {getUtilizationAdvice(creditUtilization)}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Key Factors */}\r\n        <div className=\"space-y-2\">\r\n          <div className=\"text-xs font-medium text-card-foreground\">Key Factors</div>\r\n          <div className=\"space-y-1\">\r\n            <div className=\"flex items-center gap-2 text-xs\">\r\n              <CheckCircle className=\"h-3 w-3 text-green-600 flex-shrink-0\" />\r\n              <span className=\"text-muted-foreground\">Payment history (35%)</span>\r\n            </div>\r\n            <div className=\"flex items-center gap-2 text-xs\">\r\n              <CheckCircle className=\"h-3 w-3 text-green-600 flex-shrink-0\" />\r\n              <span className=\"text-muted-foreground\">Credit utilization (30%)</span>\r\n            </div>\r\n            <div className=\"flex items-center gap-2 text-xs\">\r\n              <AlertCircle className=\"h-3 w-3 text-yellow-600 flex-shrink-0\" />\r\n              <span className=\"text-muted-foreground\">Credit age (15%)</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Quick Tip */}\r\n        <div className=\"rounded-lg bg-primary/5 border border-primary/20 p-2\">\r\n          <div className=\"flex items-start gap-2\">\r\n            <Target className=\"h-4 w-4 text-primary flex-shrink-0 mt-0.5\" />\r\n            <div>\r\n              <div className=\"text-xs font-medium text-card-foreground\">Quick Tip</div>\r\n              <div className=\"text-xs text-muted-foreground mt-0.5\">\r\n                {creditUtilization > 30\r\n                  ? \"Pay down credit cards to improve your score\"\r\n                  : \"Keep up the good work with low utilization!\"\r\n                }\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Last Updated */}\r\n        <div className=\"flex items-center justify-center gap-1 text-xs text-muted-foreground pt-1\">\r\n          <TrendingUp className=\"h-3 w-3\" />\r\n          <span>Updated {new Date(creditScore.lastUpdated).toLocaleDateString()}</span>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2213, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/kamim/HackMTY-2025/components/transactions-table.tsx"],"sourcesContent":["'use client'\r\n\r\nimport { useState, useEffect } from 'react'\r\nimport { Input } from '@/components/ui/input'\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'\r\nimport { Button } from '@/components/ui/button'\r\nimport { Search, Filter, ChevronDown } from 'lucide-react'\r\n\r\ninterface Transaction {\r\n  account_id: string\r\n  account_type: string\r\n  nickname: string\r\n  type: string\r\n  amount: number\r\n  positive: boolean\r\n  transaction_date: string\r\n  description: string\r\n}\r\n\r\ninterface TransactionsTableProps {\r\n  className?: string\r\n}\r\n\r\nfunction mapNessieTransaction(tx: any): Transaction {\r\n  return {\r\n    id: `${tx.account_id}-${tx.type}-${tx.transaction_date}`, \r\n    accountId: tx.account_id,\r\n    amount: tx.amount,\r\n    description: tx.description || '—',\r\n    category: tx.account_type || 'Unknown', \r\n    subcategory: tx.type || 'other',      \r\n    date: tx.transaction_date,\r\n    type: tx.positive ? 'credit' : 'debit',\r\n    merchant: '—',                       \r\n    isRecurring: false,                   \r\n  }\r\n}\r\n\r\nexport function TransactionsTable({ className }: TransactionsTableProps) {\r\n  const [transactions, setTransactions] = useState<Transaction[]>([])\r\n  const [filteredTransactions, setFilteredTransactions] = useState<Transaction[]>([])\r\n  const [searchTerm, setSearchTerm] = useState('')\r\n  const [typeFilter, setTypeFilter] = useState<string>('all')\r\n  const [showFilters, setShowFilters] = useState(false)\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  useEffect(() => {\r\n    const fetchTransactions = async () => {\r\n      try {\r\n        const response = await fetch('/api/transactions')\r\n        const data = await response.json()\r\n        const mapped: Transaction[] = data.transactions.map(mapNessieTransaction)\r\n        setTransactions(mapped)\r\n        setFilteredTransactions(mapped)\r\n      } catch (error) {\r\n        console.error('Failed to fetch transactions:', error)\r\n      } finally {\r\n        setLoading(false)\r\n      }\r\n    }\r\n    fetchTransactions()\r\n  }, [])\r\n\r\n\r\n  useEffect(() => {\r\n    let filtered = transactions\r\n\r\n    if (searchTerm) {\r\n      filtered = filtered.filter((t) =>\r\n        t.description?.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        t.nickname?.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        t.account_type?.toLowerCase().includes(searchTerm.toLowerCase())\r\n      )\r\n    }\r\n\r\n    if (typeFilter !== 'all') {\r\n      const isPositive = typeFilter === 'credit'\r\n      filtered = filtered.filter((t) => t.positive === isPositive)\r\n    }\r\n\r\n    setFilteredTransactions(filtered)\r\n  }, [transactions, searchTerm, typeFilter])\r\n\r\n  const formatCurrency = (amount: number) =>\r\n    new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(amount)\r\n\r\n  const formatDate = (dateString: string) =>\r\n    new Date(dateString).toLocaleDateString('en-US', {\r\n      month: 'short',\r\n      day: 'numeric',\r\n      year: 'numeric'\r\n    })\r\n\r\n  if (loading) {\r\n    return (\r\n      <Card className={className}>\r\n        <CardHeader>\r\n          <CardTitle className=\"flex items-center gap-2\">\r\n            <Filter className=\"h-5 w-5\" />\r\n            Recent Transactions\r\n          </CardTitle>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <div className=\"flex items-center justify-center h-32\">\r\n            <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-primary\"></div>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Card className={`${className} flex flex-col h-full`}>\r\n      <CardHeader className=\"flex-shrink-0\">\r\n        <CardTitle className=\"flex items-center gap-2 text-sm font-semibold\">\r\n          <Filter className=\"h-5 w-5\" />\r\n          Recent Transactions\r\n        </CardTitle>\r\n\r\n        {/* Search and Filters */}\r\n        <div className=\"space-y-4 mt-4\">\r\n          <div className=\"relative\">\r\n            <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground h-4 w-4\" />\r\n            <Input\r\n              placeholder=\"Search transactions...\"\r\n              value={searchTerm}\r\n              onChange={(e) => setSearchTerm(e.target.value)}\r\n              className=\"pl-10\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"flex items-center gap-2\">\r\n            <Button\r\n              variant=\"outline\"\r\n              size=\"sm\"\r\n              onClick={() => setShowFilters(!showFilters)}\r\n              className=\"flex items-center gap-2\"\r\n            >\r\n              <Filter className=\"h-4 w-4\" />\r\n              Filters\r\n              <ChevronDown className={`h-4 w-4 transition-transform ${showFilters ? 'rotate-180' : ''}`} />\r\n            </Button>\r\n\r\n            {typeFilter !== 'all' && (\r\n              <Button\r\n                variant=\"ghost\"\r\n                size=\"sm\"\r\n                onClick={() => setTypeFilter('all')}\r\n                className=\"text-muted-foreground\"\r\n              >\r\n                Clear filters\r\n              </Button>\r\n            )}\r\n          </div>\r\n\r\n          {showFilters && (\r\n            <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4 p-4 bg-muted/50 rounded-lg\">\r\n              <div>\r\n                <label className=\"text-sm font-medium mb-2 block\">Type</label>\r\n                <select\r\n                  value={typeFilter}\r\n                  onChange={(e) => setTypeFilter(e.target.value)}\r\n                  className=\"w-full p-2 border rounded-md bg-background\"\r\n                >\r\n                  <option value=\"all\">All</option>\r\n                  <option value=\"credit\">Income</option>\r\n                  <option value=\"debit\">Expense</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </CardHeader>\r\n\r\n      <CardContent className=\"flex-1 min-h-0\">\r\n        <div className=\"h-full overflow-auto\">\r\n          <table className=\"w-full\">\r\n            <thead className=\"sticky top-0 bg-background\">\r\n              <tr className=\"border-b\">\r\n                <th className=\"text-left py-3 px-2 font-medium text-muted-foreground\">Date</th>\r\n                <th className=\"text-left py-3 px-2 font-medium text-muted-foreground\">Description</th>\r\n                <th className=\"text-left py-3 px-2 font-medium text-muted-foreground\">Account</th>\r\n                <th className=\"text-left py-3 px-2 font-medium text-muted-foreground\">Type</th>\r\n                <th className=\"text-right py-3 px-2 font-medium text-muted-foreground\">Amount</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {filteredTransactions.map((tx, i) => (\r\n                <tr key={i} className=\"border-b hover:bg-muted/50\">\r\n                  <td className=\"py-3 px-2 text-sm\">{formatDate(tx.transaction_date)}</td>\r\n                  <td className=\"py-3 px-2 text-sm\">{tx.description || '—'}</td>\r\n                  <td className=\"py-3 px-2 text-sm text-muted-foreground\">\r\n                    {tx.nickname} ({tx.account_type})\r\n                  </td>\r\n                  <td className=\"py-3 px-2 text-center\">\r\n                    <span\r\n                      className={`text-xs px-2 py-1 rounded ${\r\n                        tx.positive\r\n                          ? 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200'\r\n                          : 'bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200'\r\n                      }`}\r\n                    >\r\n                      {tx.positive ? 'Income' : 'Expense'}\r\n                    </span>\r\n                  </td>\r\n                  <td\r\n                    className={`py-3 px-2 text-right font-medium ${\r\n                      tx.positive ? 'text-green-600' : 'text-red-600'\r\n                    }`}\r\n                  >\r\n                    {tx.positive ? '+' : '-'}{formatCurrency(tx.amount)}\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n\r\n          {filteredTransactions.length === 0 && (\r\n            <div className=\"text-center py-8 text-muted-foreground\">\r\n              No transactions found matching your criteria.\r\n            </div>\r\n          )}\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}